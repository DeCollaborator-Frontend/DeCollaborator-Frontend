import { useEffect, useRef, useState } from "react";

import EmojiPicker from "emoji-picker-react";
import { Calendar } from "primereact/calendar";
import { useParams } from "react-router-dom";
import { useChats } from "@/contexts/useChats";

const MessageInput = () => {
  const [message, setMessage] = useState("");
  const [isEmojiPickerOpen, setIsEmojiPickerOpen] = useState(false);
  const { currentUserId } = useChats();
  const { chatId, chatsCategory } = useParams();
  const { onUpdateLastMessage, onAddMessage } = useChats();

  const inputRef = useRef();

  async function onSubmit(e) {
    e.preventDefault();

    if (message.trim() === "") return;

    const newMessage = {
      id: `msg_${crypto.randomUUID()}`,
      senderId: currentUserId,
      sentAt: new Date().toISOString(),
      chatId,
      chatType: chatsCategory,
      text: message.trim(),
      isPending: true,
    };

    onAddMessage(newMessage);
    onUpdateLastMessage(chatId, newMessage);
    setMessage("");
  }

  useEffect(() => {
    inputRef.current.focus();
  }, []);
  function handleToggle() {
    setIsEmojiPickerOpen((cur) => !cur);
  }
  return (
    <form
      onSubmit={onSubmit}
      className=" relative flex flex-col gap-6 px-8 pb-4 pt-6"
    >
      <div className="flex items-center gap-6">
        <div>
          <button className="flex h-full items-center" onClick={handleToggle}>
            <svg
              width={20}
              height={20}
              viewBox="0 0 25 25"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M12.5 0C5.5875 0 0 5.625 0 12.5C0 15.8152 1.31696 18.9946 3.66117 21.3388C4.8219 22.4996 6.19989 23.4203 7.71646 24.0485C9.23303 24.6767 10.8585 25 12.5 25C15.8152 25 18.9946 23.683 21.3388 21.3388C23.683 18.9946 25 15.8152 25 12.5C25 10.8585 24.6767 9.23303 24.0485 7.71646C23.4203 6.19989 22.4996 4.8219 21.3388 3.66117C20.1781 2.50043 18.8001 1.57969 17.2835 0.951506C15.767 0.323322 14.1415 0 12.5 0ZM16.875 7.5C17.3723 7.5 17.8492 7.69754 18.2008 8.04917C18.5525 8.40081 18.75 8.87772 18.75 9.375C18.75 9.87228 18.5525 10.3492 18.2008 10.7008C17.8492 11.0525 17.3723 11.25 16.875 11.25C16.3777 11.25 15.9008 11.0525 15.5492 10.7008C15.1975 10.3492 15 9.87228 15 9.375C15 8.87772 15.1975 8.40081 15.5492 8.04917C15.9008 7.69754 16.3777 7.5 16.875 7.5ZM8.125 7.5C8.62228 7.5 9.09919 7.69754 9.45083 8.04917C9.80246 8.40081 10 8.87772 10 9.375C10 9.87228 9.80246 10.3492 9.45083 10.7008C9.09919 11.0525 8.62228 11.25 8.125 11.25C7.62772 11.25 7.15081 11.0525 6.79917 10.7008C6.44754 10.3492 6.25 9.87228 6.25 9.375C6.25 8.87772 6.44754 8.40081 6.79917 8.04917C7.15081 7.69754 7.62772 7.5 8.125 7.5ZM12.5 19.375C9.5875 19.375 7.1125 17.55 6.1125 15H18.8875C17.875 17.55 15.4125 19.375 12.5 19.375Z"
                fill="#7F7F7F"
              />
            </svg>
          </button>
          <div
            className={`${!isEmojiPickerOpen ? "pointer-events-none" : ""} absolute left-3 top-[-12px] translate-y-[-100%]`}
          >
            <EmojiPicker
              theme="dark"
              lazyLoadEmojis={true}
              className={`transition-transform ${isEmojiPickerOpen ? "translate-y-0 opacity-100" : "pointer-events-none translate-y-[30px] cursor-none opacity-0"}`}
              onEmojiClick={(e) => {
                setMessage((cur) => cur + e.emoji);
                inputRef.current.focus();
              }}
            ></EmojiPicker>
          </div>
        </div>
        <button onClick={(e) => e.preventDefault()}>
          <label htmlFor="fileInput">
            <svg
              width={20}
              height={20}
              viewBox="0 0 30 27"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M23.8984 20.8979C24.4207 20.3756 24.8351 19.7555 25.1178 19.0731C25.4005 18.3906 25.546 17.6591 25.546 16.9204C25.546 16.1818 25.4005 15.4503 25.1178 14.7678C24.8351 14.0854 24.4207 13.4653 23.8984 12.9429L15.0584 4.10419C14.8842 3.93003 14.7461 3.72326 14.6518 3.49571C14.5576 3.26815 14.5091 3.02425 14.5091 2.77794C14.5091 2.2805 14.7067 1.80344 15.0584 1.45169C15.4102 1.09995 15.8872 0.902344 16.3847 0.902344C16.631 0.902344 16.8749 0.950858 17.1024 1.04512C17.33 1.13937 17.5367 1.27753 17.7109 1.45169L26.5484 10.2904C28.2941 12.051 29.2713 14.4313 29.2662 16.9106C29.2612 19.3899 28.2742 21.7662 26.5213 23.5196C24.7685 25.273 22.3924 26.2606 19.9131 26.2664C17.4338 26.2722 15.0532 25.2956 13.2922 23.5504L2.68591 12.9442C1.39646 11.6549 0.671992 9.9062 0.671875 8.08276C0.671758 6.25932 1.396 4.51052 2.68529 3.22107C3.97457 1.93162 5.72328 1.20715 7.54672 1.20703C9.37016 1.20691 11.119 1.93116 12.4084 3.22044L22.5734 13.3854C23.3939 14.206 23.8549 15.3188 23.8549 16.4792C23.8549 17.6396 23.3939 18.7524 22.5734 19.5729C21.7529 20.3935 20.64 20.8544 19.4797 20.8544C18.3193 20.8544 17.2064 20.3935 16.3859 19.5729L7.10466 10.2917C6.93058 10.1175 6.7925 9.91078 6.69832 9.68325C6.60414 9.45573 6.5557 9.21188 6.55575 8.96563C6.55581 8.71938 6.60437 8.47555 6.69866 8.24807C6.79295 8.02059 6.93112 7.8139 7.10529 7.63982C7.27945 7.46574 7.4862 7.32766 7.71373 7.23348C7.94126 7.1393 8.18511 7.09085 8.43135 7.09091C8.6776 7.09097 8.92143 7.13953 9.14891 7.23382C9.3764 7.32811 9.58308 7.46628 9.75716 7.64044L19.0372 16.9217C19.1544 17.0391 19.3134 17.105 19.4792 17.1052C19.5613 17.1052 19.6427 17.0891 19.7186 17.0577C19.7945 17.0264 19.8634 16.9803 19.9215 16.9223C19.9796 16.8643 20.0258 16.7954 20.0572 16.7195C20.0887 16.6437 20.105 16.5624 20.105 16.4803C20.1051 16.3981 20.089 16.3168 20.0576 16.2409C20.0262 16.165 19.9802 16.0961 19.9222 16.0379L9.75591 5.87169C9.16907 5.2898 8.37562 4.96406 7.54919 4.96575C6.72276 4.96744 5.93065 5.29643 5.34619 5.88072C4.76173 6.46501 4.43252 7.25703 4.43059 8.08346C4.42867 8.90989 4.75418 9.70343 5.33591 10.2904L15.9434 20.8979C16.4657 21.4203 17.0858 21.8346 17.7683 22.1173C18.4508 22.4 19.1822 22.5455 19.9209 22.5455C20.6596 22.5455 21.3911 22.4 22.0735 22.1173C22.756 21.8346 23.3761 21.4203 23.8984 20.8979Z"
                fill="#7F7F7F"
              />
            </svg>
          </label>
          <input className="hidden" type="file" name="" id="fileInput" />
        </button>
        <button onClick={(e) => e.preventDefault()}>
          <svg
            width={20}
            height={20}
            viewBox="0 0 25 25"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M21.25 2.5H20V1.25C20 0.5 19.5 0 18.75 0C18 0 17.5 0.5 17.5 1.25V2.5H7.5V1.25C7.5 0.5 7 0 6.25 0C5.5 0 5 0.5 5 1.25V2.5H3.75C1.625 2.5 0 4.125 0 6.25V7.5H25V6.25C25 4.125 23.375 2.5 21.25 2.5ZM0 21.25C0 23.375 1.625 25 3.75 25H21.25C23.375 25 25 23.375 25 21.25V10H0V21.25ZM18.75 12.5C19.5 12.5 20 13 20 13.75C20 14.5 19.5 15 18.75 15C18 15 17.5 14.5 17.5 13.75C17.5 13 18 12.5 18.75 12.5ZM18.75 17.5C19.5 17.5 20 18 20 18.75C20 19.5 19.5 20 18.75 20C18 20 17.5 19.5 17.5 18.75C17.5 18 18 17.5 18.75 17.5ZM12.5 12.5C13.25 12.5 13.75 13 13.75 13.75C13.75 14.5 13.25 15 12.5 15C11.75 15 11.25 14.5 11.25 13.75C11.25 13 11.75 12.5 12.5 12.5ZM12.5 17.5C13.25 17.5 13.75 18 13.75 18.75C13.75 19.5 13.25 20 12.5 20C11.75 20 11.25 19.5 11.25 18.75C11.25 18 11.75 17.5 12.5 17.5ZM6.25 12.5C7 12.5 7.5 13 7.5 13.75C7.5 14.5 7 15 6.25 15C5.5 15 5 14.5 5 13.75C5 13 5.5 12.5 6.25 12.5ZM6.25 17.5C7 17.5 7.5 18 7.5 18.75C7.5 19.5 7 20 6.25 20C5.5 20 5 19.5 5 18.75C5 18 5.5 17.5 6.25 17.5Z"
              fill="#7F7F7F"
            />
          </svg>

          <div className="absolute left-3 top-[-12px] translate-y-[-100%]">
            {/* <Calendar
              icon={<p>Icon</p>}
              value={date}
              onChange={(e) => setDate(e.value)}
            /> */}
          </div>
        </button>
      </div>
      <div className="flex justify-between">
        <input
          ref={inputRef}
          value={message}
          onChange={(e) => setMessage(e.target.value)}
          onClick={() => setIsEmojiPickerOpen(false)}
          className="w-full border-0 border-none bg-transparent text-sm outline-none"
          type="text"
          placeholder="Type a message..."
        />
        <button onClick={onSubmit} className=" rounded-full bg-yellow-500 p-3">
          <svg
            width={18}
            height={18}
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M1.79029 0.773189L22.8603 10.8502C23.0733 10.9519 23.2531 11.1118 23.379 11.3114C23.5049 11.511 23.5717 11.7422 23.5717 11.9782C23.5717 12.2142 23.5049 12.4454 23.379 12.645C23.2531 12.8446 23.0733 13.0045 22.8603 13.1062L1.79029 23.1832C1.57429 23.2866 1.33312 23.3259 1.09547 23.2962C0.857819 23.2665 0.633693 23.1692 0.449759 23.0158C0.265825 22.8625 0.129826 22.6595 0.0579445 22.431C-0.0139374 22.2026 -0.0186765 21.9583 0.0442913 21.7272L2.15229 13.9992C2.1781 13.9045 2.23121 13.8195 2.30501 13.7547C2.3788 13.69 2.47002 13.6484 2.56729 13.6352L12.7773 12.2482C12.82 12.2421 12.8604 12.2251 12.8945 12.1988C12.9287 12.1726 12.9555 12.1379 12.9723 12.0982L12.9903 12.0362C12.9982 11.9804 12.987 11.9235 12.9585 11.8748C12.93 11.8262 12.8858 11.7886 12.8333 11.7682L12.7783 11.7532L2.57829 10.3662C2.4812 10.3528 2.3902 10.3111 2.3166 10.2464C2.24299 10.1817 2.19003 10.0968 2.16429 10.0022L0.0442913 2.23019C-0.0189315 1.99905 -0.0143853 1.75461 0.0573883 1.52599C0.129162 1.29736 0.265138 1.09419 0.449121 0.940656C0.633104 0.787126 0.85734 0.689714 1.09512 0.660024C1.3329 0.630333 1.5742 0.669614 1.79029 0.773189Z"
              fill="#E8E1DC"
            />
          </svg>
        </button>
      </div>
    </form>
  );
};

export default MessageInput;
